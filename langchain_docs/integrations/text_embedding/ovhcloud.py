#!/usr/bin/env python
# coding: utf-8

# # OVHcloud
#
# > In order to use this model you need to create a new token on the AI Endpoints website: https://endpoints.ai.cloud.ovh.net/.
#
# This notebook explains how to use OVHCloudEmbeddings, which is included in the langchain_community package, to embed texts in langchain.

# In[4]:


from langchain_community.embeddings.ovhcloud import OVHCloudEmbeddings

embedder = OVHCloudEmbeddings(
    model_name="multilingual-e5-base", region="kepler", access_token="MyAccessToken"
)
embed = embedder.embed_query("Hello World!")

""" verify """
print(f"Embedding generated by OVHCloudEmbeddings: {embed}")


# ## Further reading
# - [Enhance your applications with AI Endpoints](https://blog.ovhcloud.com/enhance-your-applications-with-ai-endpoints/)
# - [How to use AI Endpoints and LangChain4j](https://blog.ovhcloud.com/how-to-use-ai-endpoints-and-langchain4j/)
# - [LLMs streaming with AI Endpoints and LangChain4j](https://blog.ovhcloud.com/llms-streaming-with-ai-endpoints-and-langchain4j/)
# - [How to use AI Endpoints and LangChain to create a chatbot](https://blog.ovhcloud.com/how-to-use-ai-endpoints-and-langchain-to-create-a-chatbot/)
# - [How to use AI Endpoints, LangChain and Javascript to create a chatbot](https://blog.ovhcloud.com/how-to-use-ai-endpoints-langchain-and-javascript-to-create-a-chatbot/)
# - [RAG chatbot using AI Endpoints and LangChain](https://blog.ovhcloud.com/rag-chatbot-using-ai-endpoints-and-langchain/)
